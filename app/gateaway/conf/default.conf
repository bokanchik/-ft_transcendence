upstream user_application { server users:4000; }
upstream game_application {	server game:3001; }
upstream grafana { server grafana:3000; }
#upstream openapi_application { server openapi:8080; }

server {
	listen 8443 ssl;
	listen [::]:8443 ssl;

	server_name $DOMAIN_NAME;

	ssl_certificate $SSL_CERT;
	ssl_certificate_key $SSL_KEY;
	ssl_protocols TLSv1.3;

	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

	location ~* ^/api/users/ {
		proxy_pass http://user_application;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# For WebSockets
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}

	location ~* ^/api/game/ {
		proxy_pass http://game_application;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

# Internal use - OpenAPI documentation and service
	# location /openapi/ {
	# 	proxy_pass http://openapi_application/;

	# 	proxy_set_header Host $host;
	# 	proxy_set_header X-Real-IP $remote_addr;
	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	proxy_set_header X-Forwarded-Proto $scheme;
	# }

	location /socket.io/ {
		proxy_pass http://game:3001;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

	location /grafana/ {
		rewrite ^/grafana/(.*)$ /$1 break;

		proxy_pass http://grafana;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# For WebSockets (Grafana Live)
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header X-Grafana-Root-URL "%(protocol)s://%(host)s/grafana/";
	}

	location / {
		root   /usr/share/nginx/html;
		index  index.html index.htm;
		try_files $uri /index.html;
	}

	error_page  404 = @400; # Treat invalid paths as bad requests	
	proxy_intercept_errors on;  # Do not send backend errors to client
	include api_json_errors.conf;  # API client-friendly JSON errors
	default_type application/json;
}

server {
	listen 80;
	listen [::]:80;

	server_name $DOMAIN_NAME;
	return 301 https://$host$request_uri;
}
