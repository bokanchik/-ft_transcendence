upstream user_application {
    server user_service:3003; # have to match the docker-compose name
}

upstream game_application {
    server game_service:3001;
}

upstream openapi_application {
    server openapi_service:8080;
}

server {
    listen 8443 ssl;
    #server_name king-pong.com;
    server_name localhost;

    # TLS config
    ssl_certificate         /etc/nginx/ssl/api_nginx.crt;
    ssl_certificate_key     /etc/nginx/ssl/api_nginx.key;
    
    ssl_session_cache       shared:SSL:10m;
    ssl_session_timeout     1d;
    ssl_session_cache shared:FastifyApp:10m;
    ssl_session_tickets off;
    ssl_ciphers             HIGH:!aNULL:!MD5;
    ssl_protocols           TLSv1.2 TLSv1.3;

    # use only https with this server.
    add_header Strict-Transport-Security "max-age=63072000" always;

    location /api/users/ {
        proxy_pass http://user_application/;
        rewrite ^/api/users/?(.*)$ /$1 break;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/game/ {
        proxy_pass http://game_application;
        rewrite ^/api/games/?(.*)$ /$1 break;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Internal use - OpenAPI documentation and service
    location /openapi/ {
        proxy_pass http://openapi_application/;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        proxy_pass http://frontend:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Error responses
    error_page  404 = @400; # Treat invalid paths as bad requests
    proxy_intercept_errors on;  # Do not send backend errors to client
    include api_json_errors.conf;  # API client-friendly JSON errors
    default_type application/json;

}
